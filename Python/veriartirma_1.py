# -*- coding: utf-8 -*-
"""veriartirma_1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Y-zcf1xqLmQnLkqxf467Y_vUNskU_bKx

# Veri Artırma Örnek 1

---

[<img align="left" width="100" height="100" src="https://images.cdn2.stockunlimited.net/clipart/letter-a_1995332.jpg">](https://www.ayyucekizrak.com/)
[<img align="right" width="200" height="50"  src="https://raw.githubusercontent.com/deeplearningturkiye/pratik-derin-ogrenme-uygulamalari/944a247d404741ba37b9ef74de0716acff6fd4f9/images/dltr_logo.png">](https://deeplearningturkiye.com/)

**Colab** için kimlik doğrulama admlarını gerçekleştirme...
"""

!apt-get install -y -qq software-properties-common python-software-properties module-init-tools
!add-apt-repository -y ppa:alessandro-strada/ppa 2>&1 > /dev/null
!apt-get update -qq 2>&1 > /dev/null
!apt-get -y install -qq google-drive-ocamlfuse fuse
from google.colab import auth
auth.authenticate_user()
from oauth2client.client import GoogleCredentials
creds = GoogleCredentials.get_application_default()
import getpass
!google-drive-ocamlfuse -headless -id={creds.client_id} -secret={creds.client_secret} < /dev/null 2>&1 | grep URL
vcode = getpass.getpass()
!echo {vcode} | google-drive-ocamlfuse -headless -id={creds.client_id} -secret={creds.client_secret}
!mkdir -p drive
!google-drive-ocamlfuse drive

"""**Drive da dosya konumlandırmayı yapma işlemleri**"""

!ls

!ls drive

import os
os.chdir("drive/Veri_Artirma")

!ls

"""**Paketlerin Yüklenmesi**"""

from keras.preprocessing.image import ImageDataGenerator, array_to_img, img_to_array, load_img

"""### Kullanılacak veri artırma yönteminin seçilmesi ve hiper parametrelerinin belirlenmesi işlemleri"""

# kullanılacak veri artırma tekniklerini tanımla
datagen = ImageDataGenerator(rotation_range=40,
                             width_shift_range=0.2,
                             height_shift_range=0.2,
                             shear_range=0.2,
                             zoom_range=0.2,
                             horizontal_flip=True,
                             vertical_flip=True,
                             fill_mode='nearest')

"""**Artırma işlemi yapılacak olan görüntünün dosyadan okunması işlemi**"""

# tek bir resmi yükle
# logo.jpg dosyasını da deneyebilirsiniz

#img = load_img('ChetBaker.jpg')
img = load_img('logo.jpg')
x = img_to_array(img)
x = x.reshape((1,) + x.shape)

"""**Giriş görüntüsünden kaç tane üretilmesini istediğimizle ilgili oluşturduğumuz `for` döngüsü ve sonuçların ilgili formatla kaydedilip, dosyaya yazdılırması işlemleri.**"""

# tek resimden 50 tane farklı resim üret ve Artirilmis_Veri klasörüne .jpeg formatında kaydet.
i = 0

for batch in datagen.flow(x, batch_size=1,
                          save_to_dir='Artirilmis_Veri', 
                          save_format='jpeg'):
    i += 1
    if i > 50:
        break